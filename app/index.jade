doctype
html(ng-app="jacs")
	head
		meta(charset='utf-8' )
		meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
		title jacs
		link(rel='favicon.ico', href='favicon.ico')
		link(rel='stylesheet', href='/css/app.css')
		link(rel='stylesheet', href='/css/style.css')
		script(type="text/javascript").
			window.brunch = window.brunch || {}
			window.brunch['auto-reload'] = {enabled: true}
		script(src='/js/vendor.js')
		script(src="js/three.js")
		script(src='/js/app.js')

		script(type="x-shader/x-vertex", id="vertexShader").
			varying vec3 vWorldPosition;

			void main() {

				vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
				vWorldPosition = worldPosition.xyz;

				gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

			}
		script(type="x-shader/x-fragment", id="fragmentShader").
			uniform vec3 topColor;
			uniform vec3 bottomColor;
			uniform float offset;
			uniform float exponent;

			varying vec3 vWorldPosition;

			void main() {

			float h = normalize( vWorldPosition + offset ).y;
			gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( h, exponent ), 0.0 ) ), 1.0 );

			}

	body
		
		#loading
		#container
		#guiControls
		.interfaz
			.logo
			.line
		script(src="js/stats.min.js")
		script(src="js/dat.gui.min.js")		
		script(src="js/CopyShader.js")   		
		script(src="js/EffectComposer.js")
		script(src="js/RenderPass.js")
		script(src="js/ShaderPass.js")
		script(src="js/MaskPass.js")				
		script(src="js/FocusShader.js")		
		script(src="js/FilmShader.js")		
		script(src="js/FilmPass.js")		
		script(src="js/ConvolutionShader.js")		
		script(src="js/HorizontalTiltShiftShader.js")		
		script(src="js/VerticalTiltShiftShader.js")		
		script(src="js/VignetteShader.js")				
		script(src="js/BloomPass.js")		
		script(src="js/FXAAShader.js")		
		script(src="js/tween.min.js")		
		script(src="js/loader.js")
		script(src="js/util.js")
		script(src="js/app.js")
		script(src="/js/aplication.js")